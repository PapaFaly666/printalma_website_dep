// Service pour int√©grer l'API Mistral AI
export interface AiSupportRequest {
  question: string;
  context?: string;
  userRole?: 'admin' | 'vendor';
}

export interface AiSupportResponse {
  response: string;
  timestamp: string;
  model: string;
}

export interface ChatMessage {
  id: string;
  role: 'user' | 'assistant';
  content: string;
  timestamp: string;
}

class MistralAiService {
  private apiKey = '3gfBl2ZcES1zPPnmXUCuamybnYyiXAjW';
  private baseURL = 'https://api.mistral.ai/v1';
  private model = 'mistral-medium';

  // Context sp√©cialis√© pour PrintAlma
  private getSystemPrompt(): string {
    return `Tu es l'assistant IA de PrintAlma, sp√©cialis√© dans l'aide aux vendeurs de la plateforme PrintAlma.

**Ton r√¥le principal :**
- Aider les vendeurs √† naviguer et utiliser efficacement la plateforme PrintAlma
- Expliquer les processus de vente, de gestion des designs, et des commandes de fa√ßon simple et non technique
- Fournir des conseils pratiques pour optimiser leurs ventes
- R√©pondre aux questions sur les fonctionnalit√©s disponibles

**Contexte d√©taill√© de PrintAlma :**
PrintAlma est une plateforme e-commerce de personnalisation de produits o√π :
- Les vendeurs peuvent cr√©er et vendre des designs personnalis√©s sur des produits (t-shirts, mugs, casquettes, sacs, etc.)
- Les clients peuvent acheter des produits avec ces designs
- Il y a un syst√®me de validation des designs par l'administration avant publication
- Les vendeurs gagnent des commissions sur leurs ventes et peuvent faire des demandes de retrait

**PROCESSUS COMPLET DU VENDEUR :**

**1. GESTION DES DESIGNS :**
- **Cr√©ation** : Uploader un fichier image (PNG, JPG, max 10MB)
- **Statuts des designs** :
  - üìù **Brouillon** : Design cr√©√© mais pas encore soumis pour validation
  - ‚è≥ **En attente** : Design soumis pour validation par l'admin
  - ‚úÖ **Valid√© & Publi√©** : Design approuv√© et automatiquement publi√©
  - ‚ùå **Rejet√©** : Design refus√© (peut √™tre modifi√© et re-soumis)
- **Workflow** : Cr√©er ‚Üí Soumettre pour validation ‚Üí Attendre validation ‚Üí Design publi√© automatiquement si approuv√©
- **M√©triques** : Vues, likes, gains, utilisations par design

**2. CR√âATION DE PRODUITS PERSONNALIS√âS :**
- **√âtape 1** : S√©lectionner un produit de base (t-shirt, mug, etc.) dans le catalogue admin
- **√âtape 2** : Choisir un de ses designs valid√©s
- **√âtape 3** : Positionner le design sur le produit avec l'outil interactif (drag & drop, rotation, √©chelle)
- **√âtape 4** : Finaliser avec nom, description et mode de publication
- **Modes de publication** :
  - **Automatique** : Publi√© automatiquement si design valid√©
  - **Manuelle** : Cr√©√© en brouillon (vendeur publie manuellement)

**3. SYST√àME FINANCIER ET DEMANDES DE FONDS :**
- **Gains** : Commission sur chaque vente de produit avec leurs designs
- **Types de montants** :
  - üí∞ **Gains Totaux** : Total de tous les gains accumul√©s
  - üíµ **Disponible** : Montant pr√™t pour retrait imm√©diat
  - ‚è≥ **En attente** : Montant en cours de traitement
  - üìä **Commission** : Taux moyen (g√©n√©ralement autour de 10-12%)

- **PROCESSUS D'APPEL DE FONDS COMPLET** :

  **üìã √âtape 1 - Acc√©der √† l'appel de fonds :**
  - Aller dans le menu "Appel de Fonds"
  - Voir le dashboard avec 4 cartes : Gains Totaux, Disponible, En attente, Commissions

  **üí∞ √âtape 2 - V√©rifier le solde disponible :**
  - Minimum requis : 1 000 FCFA (pas 10 000)
  - Le montant "Disponible" est ce qu'on peut retirer
  - Le montant "En attente" correspond aux demandes en cours de traitement

  **‚ûï √âtape 3 - Cr√©er une nouvelle demande :**
  - Cliquer sur "Nouvelle Demande"
  - Saisir le montant (minimum 1 000 F, maximum = solde disponible)
  - Choisir la m√©thode de paiement :
    - üì± **Wave** : Num√©ro de t√©l√©phone +221
    - üß° **Orange Money** : Num√©ro de t√©l√©phone +221
    - üè¶ **Virement bancaire** : IBAN requis

  **‚úÖ √âtape 4 - Confirmer la demande :**
  - V√©rifier le r√©capitulatif (montant, m√©thode, solde apr√®s retrait)
  - Confirmer d√©finitivement
  - La demande est cr√©√©e avec le statut "PENDING" (En attente de paiement)

  **‚è±Ô∏è √âtape 5 - Suivi de la demande :**
  - D√©lai de traitement : 24-48h (pas 1-3 jours)
  - Statuts possibles :
    - üü° **PENDING** : En attente de paiement (statut initial)
    - üü¢ **PAID** : Pay√© et termin√©
  - Notifications par email √† chaque √©tape
  - Historique complet des demandes avec dates et d√©tails

**4. SUIVI DES PERFORMANCES :**
- **Dashboard** avec m√©triques cl√©s :
  - Chiffre d'affaires annuel et mensuel
  - Solde disponible
  - Nombre de produits (total, publi√©s, en attente, brouillons)
  - Nombre de designs par statut
  - Vues de la boutique
- **Commandes** : Suivi des ventes et commandes clients
- **Statistiques d√©taill√©es** : Performance par design et produit

**5. VALIDATION ET WORKFLOW :**
- **Validation des designs** : Obligatoire par l'admin avant publication
- **Cascade de validation** : Syst√®me hi√©rarchique (design ‚Üí produit ‚Üí publication)
- **Notifications** : Email √† chaque √©tape de validation
- **Gestion des rejets** : Possibilit√© de modifier et re-soumettre

**CONSEILS PRATIQUES POUR OPTIMISER LES VENTES :**

**Design :**
- Cr√©er des designs de qualit√©, originaux et attrayants
- Choisir des th√®mes populaires et tendance
- Optimiser la taille et qualit√© des fichiers
- Utiliser des mots-cl√©s pertinents dans les descriptions

**Pricing :**
- Analyser les prix de la concurrence
- Proposer des designs dans diff√©rentes gammes de prix
- Consid√©rer la valeur ajout√©e de vos cr√©ations

**Marketing :**
- Soigner les descriptions de produits
- Utiliser des tags appropri√©s
- Cr√©er des collections coh√©rentes
- Surveiller les performances via le dashboard

**Gestion :**
- Soumettre r√©guli√®rement de nouveaux designs
- Maintenir un stock de designs en brouillon
- Suivre les tendances et adapter l'offre
- Utiliser les statistiques pour optimiser

**PROBL√àMES COURANTS ET SOLUTIONS :**

**Design rejet√© :**
- V√©rifier la qualit√© et originalit√©
- Respecter les guidelines de la plateforme
- Modifier et re-soumettre
- Contacter le support en cas de doute

**Faibles ventes :**
- Analyser les m√©triques du dashboard
- Optimiser les descriptions et prix
- Cr√©er plus de variety dans les designs
- Suivre les tendances du march√©

**Probl√®me de demande de fonds :**
- V√©rifier le solde minimum (1 000 FCFA, pas 10 000)
- S'assurer que le montant ne d√©passe pas le solde disponible
- V√©rifier que le num√©ro de t√©l√©phone est correct pour Wave/Orange Money
- V√©rifier que l'IBAN est correct pour les virements bancaires
- Suivre le statut dans l'historique des demandes
- Contacter le support si d√©lai de 48h d√©pass√©
- Les demandes sont trait√©es directement par l'√©quipe (pas d'approbation admin d'abord)

**Ton style de communication :**
- Amical, encourageant et professionnel
- Explications simples √©tape par √©tape (pas technique)
- Utilise des exemples concrets et pratiques
- Utilise des √©mojis pour rendre les explications plus claires
- Encourage et motive les vendeurs
- R√©ponds toujours en fran√ßais
- Donne des conseils actionnables

**INFORMATIONS DE CONTACT ET SUPPORT :**
- **Email support :** payments@printalma.com
- **T√©l√©phone :** +221 77 123 45 67
- **Horaires :** Lundi-Vendredi, 9h-18h
- **D√©lai de traitement habituel :** 1-3 jours ouvr√©s (g√©n√©ral), 24-48h (appel de fonds)

Si une question sort de ton domaine d'expertise (technique avanc√©, juridique, probl√®mes de compte),
redirige gentiment l'utilisateur vers le support technique de PrintAlma avec les coordonn√©es ci-dessus.`;
  }

  async askQuestion(request: AiSupportRequest): Promise<AiSupportResponse> {
    try {
      console.log('ü§ñ Envoi de la question √† Mistral AI:', request.question);

      const messages = [
        {
          role: 'system',
          content: this.getSystemPrompt()
        },
        {
          role: 'user',
          content: `Question: ${request.question}${request.context ? `\n\nContexte suppl√©mentaire: ${request.context}` : ''}`
        }
      ];

      const response = await fetch(`${this.baseURL}/chat/completions`, {
        method: 'POST',
        headers: {
          'Authorization': `Bearer ${this.apiKey}`,
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          model: this.model,
          messages: messages,
          max_tokens: 1000,
          temperature: 0.7,
        }),
      });

      if (!response.ok) {
        throw new Error(`Erreur API Mistral: ${response.status}`);
      }

      const data = await response.json();

      console.log('‚úÖ R√©ponse de Mistral AI re√ßue');

      return {
        response: data.choices[0].message.content,
        timestamp: new Date().toISOString(),
        model: this.model
      };

    } catch (error) {
      console.error('‚ùå Erreur lors de l\'appel √† Mistral AI:', error);
      throw new Error('Impossible de contacter l\'assistant IA. Veuillez r√©essayer.');
    }
  }

  // M√©thode pour les conversations en continu
  async continueChat(messages: ChatMessage[]): Promise<AiSupportResponse> {
    try {
      console.log('ü§ñ Continuation de chat avec Mistral AI');

      const mistralMessages = [
        {
          role: 'system',
          content: this.getSystemPrompt()
        },
        ...messages.map(msg => ({
          role: msg.role === 'user' ? 'user' : 'assistant',
          content: msg.content
        }))
      ];

      const response = await fetch(`${this.baseURL}/chat/completions`, {
        method: 'POST',
        headers: {
          'Authorization': `Bearer ${this.apiKey}`,
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          model: this.model,
          messages: mistralMessages,
          max_tokens: 1000,
          temperature: 0.7,
        }),
      });

      if (!response.ok) {
        throw new Error(`Erreur API Mistral: ${response.status}`);
      }

      const data = await response.json();

      return {
        response: data.choices[0].message.content,
        timestamp: new Date().toISOString(),
        model: this.model
      };

    } catch (error) {
      console.error('‚ùå Erreur lors du chat avec Mistral AI:', error);
      throw new Error('Impossible de contacter l\'assistant IA. Veuillez r√©essayer.');
    }
  }

  // M√©thode avec contexte syst√®me additionnel (profil/stats vendeur)
  async continueChatWithContext(messages: ChatMessage[], systemContext: string): Promise<AiSupportResponse> {
    try {
      const mistralMessages = [
        { role: 'system', content: this.getSystemPrompt() },
        { role: 'system', content: `Contexte dynamique vendeur:\n${systemContext}` },
        ...messages.map(msg => ({ role: msg.role === 'user' ? 'user' : 'assistant', content: msg.content }))
      ];

      const response = await fetch(`${this.baseURL}/chat/completions`, {
        method: 'POST',
        headers: {
          'Authorization': `Bearer ${this.apiKey}`,
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          model: this.model,
          messages: mistralMessages,
          max_tokens: 1000,
          temperature: 0.7,
        }),
      });

      if (!response.ok) {
        throw new Error(`Erreur API Mistral: ${response.status}`);
      }

      const data = await response.json();
      return { response: data.choices[0].message.content, timestamp: new Date().toISOString(), model: this.model };
    } catch (error) {
      console.error('‚ùå Erreur chat IA avec contexte:', error);
      // Fallback sur chat sans contexte
      return this.continueChat(messages);
    }
  }

  // Questions pr√©d√©finies pour guider les vendeurs
  getSuggestedQuestions(): string[] {
    return [
      "Comment cr√©er et uploader mon premier design ?",
      "Comment positionner correctement mon design sur un produit ?",
      "Pourquoi mon design a √©t√© rejet√© et que faire ?",
      "Comment faire une demande d'appel de fonds pour retirer mes gains ?",
      "Quelles sont les meilleures pratiques pour vendre plus ?",
      "Comment voir mes statistiques de ventes et gains ?",
      "Quel est le processus de validation des designs ?",
      "Comment cr√©er un produit personnalis√© avec mon design ?",
      "Combien de temps prend la validation d'un design ?",
      "Comment optimiser mes descriptions de produits ?"
    ];
  }

  // Erreurs courantes et solutions pour vendeurs
  getCommonIssues(): Array<{title: string, question: string}> {
    return [
      {
        title: "Mon design a √©t√© rejet√©",
        question: "Pourquoi mon design a √©t√© rejet√© et comment le corriger pour qu'il soit accept√© ?"
      },
      {
        title: "Je n'arrive pas √† positionner mon design",
        question: "Comment utiliser l'outil de positionnement pour placer mon design correctement sur le produit ?"
      },
      {
        title: "Ma demande d'appel de fonds prend du temps",
        question: "Ma demande d'appel de fonds est en attente depuis longtemps, que dois-je faire ?"
      },
      {
        title: "Je ne vois pas mes gains",
        question: "O√π puis-je voir mes gains et statistiques de ventes dans mon tableau de bord ?"
      },
      {
        title: "Mes ventes sont faibles",
        question: "Comment am√©liorer mes ventes et faire en sorte que mes designs se vendent mieux ?"
      },
      {
        title: "Erreur lors de l'upload de design",
        question: "J'ai une erreur quand j'essaie d'uploader mon design, comment la r√©soudre ?"
      }
    ];
  }
}

export const mistralAiService = new MistralAiService();
export default mistralAiService;