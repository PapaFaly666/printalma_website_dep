const fs = require('fs');
const path = require('path');

console.log('üßπ Nettoyage du cache Vite...');

const cachePaths = [
  'node_modules/.vite',
  'node_modules/.cache',
  '.vite',
  'dist'
];

cachePaths.forEach(cachePath => {
  if (fs.existsSync(cachePath)) {
    try {
      fs.rmSync(cachePath, { recursive: true, force: true });
      console.log(`‚úÖ Supprim√©: ${cachePath}`);
    } catch (error) {
      console.log(`‚ö†Ô∏è  Impossible de supprimer: ${cachePath} (${error.message})`);
    }
  } else {
    console.log(`‚ÑπÔ∏è  Pas de cache √† supprimer: ${cachePath}`);
  }
});

console.log('\n‚úÖ Cache nettoy√©!');
console.log('üîÑ Red√©marrez le serveur avec: npm run dev -- --force'); 
const path = require('path');

console.log('üßπ Nettoyage du cache Vite...');

const cachePaths = [
  'node_modules/.vite',
  'node_modules/.cache',
  '.vite',
  'dist'
];

cachePaths.forEach(cachePath => {
  if (fs.existsSync(cachePath)) {
    try {
      fs.rmSync(cachePath, { recursive: true, force: true });
      console.log(`‚úÖ Supprim√©: ${cachePath}`);
    } catch (error) {
      console.log(`‚ö†Ô∏è  Impossible de supprimer: ${cachePath} (${error.message})`);
    }
  } else {
    console.log(`‚ÑπÔ∏è  Pas de cache √† supprimer: ${cachePath}`);
  }
});

console.log('\n‚úÖ Cache nettoy√©!');
console.log('üîÑ Red√©marrez le serveur avec: npm run dev -- --force'); 
 
 
 
 
 